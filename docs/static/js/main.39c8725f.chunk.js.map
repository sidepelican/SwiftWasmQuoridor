{"version":3,"sources":["WasmContext.tsx","Board.tsx","App.tsx","index.tsx"],"names":["wasmFs","WasmFs","wasi","WASI","args","env","bindings","wasiBindings","fs","startWasiTask","a","fetch","response","arrayBuffer","responseArrayBuffer","wasm_bytes","Uint8Array","lowerI64Imports","lowered_wasm","WebAssembly","compile","module","instantiate","getImports","instance","start","WasmContext","React","createContext","hello","add","newGame","putFence","movePawn","canPutFence","canMove","aiNext","existsFence","playerPosition","isWin","isInTurn","remainingFences","WasmProvider","props","useState","setInstance","useEffect","then","children","Provider","value","exports","possibleFences","Array","flatMap","_","i","x","y","o","Board","wasm","useContext","hasGame","setHasGame","setCount","step","v","aiTurn","setTimeout","cpuPos","playerPos","cpuFencesLeft","playerFencesLeft","cpuWin","playerWin","style","position","width","height","background","display","flexDirection","marginTop","marginLeft","map","onClick","undefined","isPlayer","top","left","Math","floor","placed","canPlace","orientation","right","bottom","Tile","className","Pawn","Fence","MiniFence","App","padding","textAlign","href","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39c8725f.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { WASI } from \"@wasmer/wasi\";\nimport { lowerI64Imports } from \"@wasmer/wasm-transformer\"\nimport wasiBindings from \"@wasmer/wasi/lib/bindings/browser\";\nimport { WasmFs } from \"@wasmer/wasmfs\";\n\n// Instantiate a new WASI Instance\nconst wasmFs = new WasmFs();\nlet wasi = new WASI({\n  args: [],\n  env: {},\n  bindings: {\n    ...wasiBindings,\n    fs: wasmFs.fs\n  }\n});\n\nconst startWasiTask = async () => {\n  // Fetch our Wasm File\n  const response = await fetch(\"./WasmLib.wasm\");\n  const responseArrayBuffer = await response.arrayBuffer();\n  \n  // Instantiate the WebAssembly file\n  const wasm_bytes = new Uint8Array(responseArrayBuffer);\n  const lowered_wasm = await lowerI64Imports(wasm_bytes);\n  let module = await WebAssembly.compile(lowered_wasm);\n  let instance = await WebAssembly.instantiate(module, {\n    ...wasi.getImports(module)\n  });\n  wasi.start(instance);\n\n  // (instance.exports.hello as any)();\n  // const stdout = await wasmFs.getStdOut();\n  // console.log(stdout);\n  \n  return instance;\n};\n\ntype WasmExports = {\n  hello: () => void,\n  add: (l: number, r: number) => number,\n  newGame: () => boolean,\n  putFence: (x: number, y: number, orientation: number) => boolean,\n  movePawn: (x: number, y: number) => boolean,\n  canPutFence: (x: number, y: number, orientation: number) => boolean,\n  canMove: (x: number, y: number) => boolean,\n  aiNext: () => void,\n  existsFence: (x: number, y: number, orientation: number) => boolean,\n  playerPosition: (wasmPlayer: boolean) => number,\n  isWin: (wasmPlayer: boolean) => boolean,\n  isInTurn: (wasmPlayer: boolean) => boolean,\n  remainingFences: (wasmPlayer: boolean) => number,\n};\n\nconst WasmContext = React.createContext<WasmExports>({\n  hello: () => {},\n  add: () => 0,\n  newGame: () => false,\n  putFence: () => false,\n  movePawn: () => false,\n  canPutFence: () => false,\n  canMove: () => false,\n  aiNext: () => false,\n  existsFence: () => false,\n  playerPosition: () => 0,\n  isWin: () => false,\n  isInTurn: () => false,\n  remainingFences: () => 0,\n});\n\nexport const WasmProvider: React.FC<{}> = (props) => {\n  const [instance, setInstance] = useState<WebAssembly.Instance>();\n  useEffect(() => {\n    startWasiTask().then(setInstance);\n  }, []);\n\n  if (instance == null) {\n    return <>{props.children}</>;\n  }\n\n  return <WasmContext.Provider value={instance.exports as any}>\n    {props.children}\n  </WasmContext.Provider>;\n};\n\nexport const useWasmExports = (): WasmExports => {\n  return useContext(WasmContext);\n}\n","import React, { useEffect, useState } from 'react';\nimport './Board.css';\nimport { useWasmExports } from './WasmContext';\n\ntype Orientation = \"horizontal\" | \"vertical\";\n\nconst possibleFences: {x: number, y: number, o: Orientation}[] = \n[...Array(8)].flatMap((_, i) => {\n\tconst x = i + 1;\n\treturn [...Array(8)].flatMap((_, i) => { \n\t\tconst y = i + 1;\n\t\treturn [\n\t\t\t{ x: x, y: y, o: \"horizontal\" },\n\t\t\t{ x: x, y: y, o: \"vertical\" },\n\t\t]\n\t});\n});\n\nexport const Board: React.VFC<{}> = (props) => { \n\tconst wasm = useWasmExports();\n\tconst [hasGame, setHasGame] = useState(false);\n\tuseEffect(() => {\n\t\tsetHasGame(wasm.newGame());\n\t}, [wasm]);\n\tconst [, setCount] = useState(0);\n\tconst step = () => {\n\t\tsetCount(v => v + 1);\n\t};\n\t\n\tconst aiTurn = !hasGame ? false : wasm.isInTurn(false);\n\tuseEffect(() => {\n\t\tif (aiTurn) {\n\t\t\tsetTimeout(() => { \n\t\t\t\twasm.aiNext();\n\t\t\t\tsetCount(v => v + 1);\n\t\t\t}, 50);\n\t\t}\n\t}, [aiTurn, wasm]);\n\n\tif (!hasGame) {\n\t\treturn <p>Loading <code>.wasm</code> binary ...</p>;\n\t}\n\n\tconst cpuPos = wasm.playerPosition(false);\n\tconst playerPos = wasm.playerPosition(true);\n\tconst cpuFencesLeft = wasm.remainingFences(false);\n\tconst playerFencesLeft = wasm.remainingFences(true);\n\tconst cpuWin = wasm.isWin(false);\n\tconst playerWin = wasm.isWin(true);\n\n\treturn <div style={{position: \"relative\", width: \"480px\", height: \"580px\", background: \"gray\"}}>\n\t\t<div style={{\n\t\t\tdisplay: \"flex\",\n\t\t\tflexDirection: \"column\",\n\t\t\tmarginTop: \"65px\",\n\t\t\tmarginLeft: \"15px\",\n\t\t}}>\n\t\t\t{[...Array(9)].map((_, y) =>\n\t\t\t\t<div style={{display: \"flex\", flexDirection: \"row\"}} key={y}>\n\t\t\t\t\t{[...Array(9)].map((_, x) => {\n\t\t\t\t\t\tconst canMove = wasm.canMove(x, y);\n\t\t\t\t\t\tlet onClick = undefined;\n\t\t\t\t\t\tif (canMove) {\n\t\t\t\t\t\t\tonClick = () => { wasm.movePawn(x, y); step(); };\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn <Tile key={x} canMove={canMove} onClick={onClick}/>;\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t\t<div>\n\t\t\t<Pawn isPlayer={false} top={cpuPos % 100 * 50 + 65} left={Math.floor(cpuPos / 100) * 50 + 15}/>\n\t\t\t<Pawn isPlayer={true} top={playerPos % 100 * 50 + 65} left={Math.floor(playerPos / 100) * 50 + 15}/>\n\t\t</div>\n\t\t<div>\n\t\t\t{possibleFences.map(({x, y, o}) => {\n\t\t\t\tconst placed = wasm.existsFence(x, y, o === \"vertical\" ? 1 : 0);\n\t\t\t\tconst canPlace = wasm.canPutFence(x, y, o === \"vertical\" ? 1 : 0);\n\t\t\t\tlet top, left: number\n\t\t\t\tswitch (o) {\n\t\t\t\t\tcase \"horizontal\":\n\t\t\t\t\t\tleft = (x - 1) * 50;\n\t\t\t\t\t\ttop = y * 50;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"vertical\":\n\t\t\t\t\t\tleft = x * 50 - 10;\n\t\t\t\t\t\ttop = (y - 1) * 50 + 10;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttop += 60; left += 20;\n\t\t\t\tlet onClick = undefined;\n\t\t\t\tif (canPlace) {\n\t\t\t\t\tonClick = () => { wasm.putFence(x, y, o === \"vertical\" ? 1 : 0); step(); };\n\t\t\t\t}\n\t\t\t\treturn <Fence key={`${x}_${y}_${o}`} orientation={o} canPlace={canPlace} placed={placed} top={top} left={left} onClick={onClick}/>;\n\t\t\t})}\n\t\t</div>\n\t\t<div>\n\t\t\t{[...Array(cpuFencesLeft)].map((_, i) => {\n\t\t\t\treturn <MiniFence key={i} top={10} left={i * 15 + 10}/>;\n\t\t\t})}\n\t\t\t{[...Array(playerFencesLeft)].map((_, i) => {\n\t\t\t\treturn <MiniFence key={i} top={540} left={i * 15 + 10}/>;\n\t\t\t})}\n\t\t</div>\n\t\t<div style={{position: \"absolute\", top: 0, right: 0}}>\n\t\t\t{aiTurn ? <p>AI thinking...</p> : null}\n\t\t</div>\n\t\t<div style={{position: \"absolute\", bottom: 0, right: 0}}>\n\t\t\t{playerWin ? <p>You Win</p> : null}\n\t\t\t{cpuWin ? <p>You Lose</p> : null}\n\t\t</div>\n\t</div>;\n}\n\nconst Tile: React.VFC<{\n\tcanMove: boolean,\n\tonClick?: () => void,\n}> = (props) => {\n\treturn <div \n\tclassName={\n\t\t\"TileView\"\n\t\t+ (props.canMove ? \" canMove\" : \"\")\n\t}\n\tonClick={props.onClick}\n\t/>;\n}\n\nconst Pawn: React.VFC<{\n\tisPlayer: boolean,\n\ttop: number, left: number\n}> = (props) => {\n\treturn <div\n\tclassName={\n\t\t\"PawnView\"\n\t\t+ (props.isPlayer ? \" isPlayer\" : \"\")\n\t}\n\tstyle={{\n\t\tposition: \"absolute\",\n\t\ttop: props.top,\n\t\tleft: props.left,\n\t}}/>;\n}\n\nconst Fence: React.VFC<{\n\torientation: Orientation,\n\tcanPlace: boolean,\n\tplaced: boolean,\n\tonClick?: () => void,\n\ttop: number, left: number\n}> = (props) => {\n\treturn <div\n\tclassName={\n\t\t`FenceView ${props.orientation}`\n\t\t+ (props.canPlace ? \" canPlace\" : \"\")\n\t\t+ (props.placed ? \" placed\" : \"\")\n\t} \n\tstyle={{\n\t\tposition: \"absolute\",\n\t\ttop: props.top,\n\t\tleft: props.left,\n\t}}\n\tonClick={props.onClick}\n\t/>;\n}\n\nconst MiniFence: React.VFC<{\n\ttop: number, left: number\n}> = (props) => {\n\treturn <div\n\tclassName=\"MiniFenceView\"\n\tstyle={{\n\t\tposition: \"absolute\",\n\t\ttop: props.top,\n\t\tleft: props.left,\n\t}}\n\t/>;\n}","import React from 'react';\nimport './App.css';\nimport { Board } from './Board';\n\nexport const App: React.VFC<{}> = () => {\n  return <div className=\"App\">\n    <h1 style={{padding: \"1.5rem\"}}>\n      <code>Swift Quoridor!</code>\n    </h1>\n    <Board/>\n    <div className=\"Description\">\n      <h2>これは何？</h2>\n      <p>\n        Swiftで作ったコリドールのゲームエンジンをWasmビルドしてブラウザで動くようにしたものです。\n      </p>\n      <p>\n        Swiftではゲームエンジン部分とAIが動いてます。UIはJSです。\n        （途中までUIもSwiftで作っていましたが、色々と課題があり諦めてReactにしました。）\n      </p>\n      <h2>Quoridor（コリドール）</h2>\n      <p>\n        ターン制のボードゲームで、自分のコマを相手の陣地（一番上または一番下の行）に到達させると勝利です。\n        ターンプレイヤーは以下のどちらかを行えます。\n      </p>\n      <ul>\n        <li>コマを前後左右1マスに動かす。移動先に相手のコマがある場合は、飛び越えることができる。</li>\n        <li>板を1枚設置する。板はコマの通行を妨害する。コマがゴールできなくなるように板を設置することはできない。</li>\n      </ul>\n      <hr style={{marginTop: \"3rem\"}}/>\n      <div style={{textAlign: \"end\"}}>\n        Twitter: \n        <a\n          className=\"TwitterLink\"\n          href=\"https://twitter.com/iceman5499\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          @iceman5499\n        </a>\n      </div>\n    </div>\n  </div>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport { WasmProvider } from './WasmContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <WasmProvider>\n      <App />\n    </WasmProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}